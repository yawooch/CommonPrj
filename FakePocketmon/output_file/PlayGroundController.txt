

import java.util.List;
import java.util.Scanner;

public class PlayGroundController
{

    public static void main(String[] args)
    {
        //주인공(나)에 해당하는 트레이너 객체생성
        MonsterTrainer me = new MonsterTrainer();

        //무한반복문 생성
        //{
            //System.out.println("행동을 선택해 주세요");
            //System.out.println("1. 여행한다");
            //System.out.println("2. 현재상태를 본다");
            //System.out.println("3. 잡은 몬스터 상태를 본다.");
            //System.out.println("9. 여행을 종료한다");
            switch()
            {
            case 1 : 
                //if 트레이너가 몬스터가 없다면 기본 포켓몬을 선택하도록 한다.
                {
                    //System.out.println("포켓몬이 없다. 오박사에게 포켓몬을 받을까?");
                    //System.out.println("1. yes");
                    //System.out.println("2. no");
                    switch(parseDecision)
                    {
                    //1. yes
                    case 1 :
                        //몬스터 선택 메소드
                        //selectMonster(me); 호출
                        break;
                    //2. no
                    case 2 : 
                        break;
                    }
                }
                
                //Monster enemy = randomMonster();//몬스터를 랜덤으로 생성한다. OR 일반 몬스터를 고정하여 생성한다.
                //System.out.println("\n야생의 " + enemy.getMonsterName() + "이(가) 나왔다 뭐할까?");
                //System.out.println("1. 싸운다");
                //System.out.println("2. 도망간다");

                switch()
                {
                case 1 :
                    //FightMode 의 startFight() 메소드 실행
                    //FightMode fightMode = new FightMode();
                    //fightMode.startFight(me, enemy);
                    break;
                case 2 :
                    //System.out.println(me.getTtrainerName() + "는(은) 도망쳤다");
                    break;
                }
                break;
            //2. 현재상태를 본다
            case 2 : 
                //System.out.println(me.printInfo());
                break;
            //3. 잡은 몬스터 상태를 본다.(누구를 볼까?)
            case 3 : 

                //if 트레이너가 몬스터가 없다
                {
                    //System.out.println("보유한 포켓몬이 없습니다. 메뉴로 돌아갑니다.");
                    //break;
                }
                //System.out.println("\n잡은 몬스터 상태를 본다.(누구를 볼까?)");
                //트레이너의 몬스터볼 목록을 가져와 목록을 만들어준다.
                for()
                {
                }

                //if목록에 없는 몬스터 선택시
                {
                    //System.out.println("잘못된 선택입니다.");
                    break;
                }
                
                //System.out.println(trainersMons.get(parseDecision-1).printInfo());
                break;
            //9. 여행을 종료한다
            case 9 :
                //System.out.println("게임을 종료합니다.");
                break;
    }

    public static Monster randomMonster()
    {
        //"피카츄","파이리","꼬부기","이상해씨" 중 랜덤으로 몬스터를생성하여 반환한다.
        //방법은 selectMonster() 를 참조
        //int monSelInt = (int)(Math.random() * 4); //0 ~ 3까지의 랜덤 숫자를 생성한다.
        //return Monster
    }
    
    /** "피카츄","파이리","꼬부기","이상해씨" 를 String 배열로 만들어 선택하고 트레이터 몬스터 볼에 넣는다.
     * @param me
     */
    public static void selectMonster(MonsterTrainer me)
    {
        //"피카츄","파이리","꼬부기","이상해씨" 를 배열로 선언한다.
        //배열에 있는 몬스터 선택지를 출력한다.
        //Scanner 로 입력받은 값에 해당하는 몬스터를 addMonster해준다.
        //System.out.println(selMonName + "! 넌 내꺼야~!");
        //System.out.println("출발하자~");
    }
}
